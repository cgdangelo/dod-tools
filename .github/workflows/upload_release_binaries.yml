on:
  release:
    types: [ published ]

permissions:
  contents: write

env:
  BINARY_NAME: ${{ github.event.repository.name }}
  CARGO_TERM_COLOR: always
  RELEASE_VERSION: ${{ github.event.release.tag_name }}

jobs:
  build_and_upload:
    name: Create and upload binary ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - name: Windows-x86_64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
          - name: Linux-x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tgz
          - name: macOS-ARM
            runner: ubuntu-latest
            target: aarch64-apple-darwin
            archive: zip
          - name: macOS-x86_64
            runner: ubuntu-latest
            target: x86_64-apple-darwin
            archive: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update toolchain
        run: |
          rustup target add ${{ matrix.platform.target }}
          rustup update

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Test and build code
        run: |
          cargo clippy
          cargo test
          cargo build --release

      - name: Compress artifact (zip)
        if: ${{ matrix.platform.runner == 'windows-latest' }}
        env:
          ARCHIVE_NAME: ${{ env.BINARY_NAME }}-${{ env.RELEASE_VERSION }}-${{ matrix.platform.target }}.${{ matrix.platform.archive }}
        run: |
          Get-ChildItem -Path target/release/${{ env.BINARY_NAME }}-gui.exe, target/release/${{ env.BINARY_NAME }}-cli.exe |
          Compress-Archive -DestinationPath ${{ env.ARCHIVE_NAME }}

      - name: Compress artifact (tgz)
        if: ${{ matrix.platform.archive == 'tgz' }}
        env:
          ARCHIVE_NAME: ${{ env.BINARY_NAME }}-${{ env.RELEASE_VERSION }}-${{ matrix.platform.target }}.${{ matrix.platform.archive }}
        run: |
          tar -czf ${{ env.ARCHIVE_NAME }} -C target/release ${{ env.BINARY_NAME }}-gui ${{ env.BINARY_NAME }}-cli

      - name: Compress artifact (zip)
        if: ${{ matrix.platform.runner != 'windows-latest' && matrix.platform.archive == 'zip' }}
        env:
          ARCHIVE_NAME: ${{ env.BINARY_NAME }}-${{ env.RELEASE_VERSION }}-${{ matrix.platform.target }}.${{ matrix.platform.archive }}
        run: |
          zip -j ${{ env.ARCHIVE_NAME }} target/release/${{ env.BINARY_NAME }}-gui target/release/${{ env.BINARY_NAME }}-cli

      - name: Upload artifact
        env:
          ARCHIVE_NAME: ${{ env.BINARY_NAME }}-${{ env.RELEASE_VERSION }}-${{ matrix.platform.target }}.${{ matrix.platform.archive }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ env.RELEASE_VERSION }} ${{ env.ARCHIVE_NAME }}
