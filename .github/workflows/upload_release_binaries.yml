on:
  push:
    tags: [ "v*" ]

permissions:
  contents: write

env:
  PROJECT_NAME: ${{ github.event.repository.name }}

jobs:
  build_and_upload:
    name: Create and upload binary ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            runner: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update toolchain
        run: rustup update

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Test and build code
        run: |
          cargo clippy
          cargo build --release

      - name: Compress artifact (zip)
        if: ${{ matrix.runner == 'windows-latest' }}
        run: |
          Compress-Archive -Path target/release/${{ env.PROJECT_NAME }}.exe -DestinationPath ${{ env.PROJECT_NAME }}.${{ matrix.target }}.zip

      - name: Compress artifact (tar)
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          exit 1

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.PROJECT_NAME }}.${{ matrix.target }}.zip

  release:
    name: Create release
    needs: [ build_and_upload ]
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${TAG#v}" \
            --notes-from-tag \
            ./dist/*
